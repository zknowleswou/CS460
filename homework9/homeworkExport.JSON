[{"type":"header","value":"More in Angular6"},{"type":"paragraph","value":"For this post I am going to cover working with Angular6. Specifically I am going to look at routing and components. Routing is an essential part of an SPA. Angular6 has a powerful routing engine that even includes things like lazy loading feature modules. Components are the building blocks of an SPA. Components are supposed to be designed in such a way that they are extensible and reusable throughout the SPA."},{"type":"header","value":"The routing module"},{"type":"image","value":"./Images/Capture1.PNG"},{"type":"paragraph","value":"Defining routes and their respective components."},{"type":"paragraph","value":"The basic flow is as follows. A route is defined like as in the screen shot above. Each route has a component registered to it. Each component has a template that it renders when called. That component can then render sub components to build features. "},{"type":"image","value":"./Images/Capture2.PNG"},{"type":"paragraph","value":"A snippet from the sign in component."},{"type":"image","value":"./Images/Capture3.PNG"},{"type":"paragraph","value":"Where the routing module dumps the components."},{"type":"paragraph","value":"In the first image above you can see at the top of the component the template is defined. That file lives along side the <code>TypeScript</code> component file withing a signin folder. When the URL matches the signin route, Angular6 renders the signin component template and initializes the component itself."},{"type":"header","value":"Component hooks"},{"type":"paragraph","value":"Components come with all sorts of hooks that allow for bi directional data sharing and event pushing. I used many of these hooks when creating the workout designer feature of my app."},{"type":"image","value":"./Images/Capture4.PNG"},{"type":"paragraph","value":"The workout designer."},{"type":"image","value":"./Images/Capture5.PNG"},{"type":"paragraph","value":"Partial code for the workout designer."},{"type":"paragraph","value":"Circled in red on both images is a component and how the component is rendered by its parent component. In this case the parent component is the <code>builder</code> component and the child component is the <code>dayListBuild</code> component. There are two different types of hooks on the component. "},{"type":"paragraph","value":"The first hook is <code>[allDays]=\"workout.days\"</code>. That is a data binding that passes in the <code>allDays</code> collection into the component. The image below shows how the component consumes the collection being passed in. The second hook is <code>(daySet)=\"setActiveDay($event)\"</code>. This hook is an event that is published by the <code>dayListBuild</code> component. This particular event is making bubbling up a onClick event in the <code>dayListBuild</code> component."},{"type":"image","value":"./Images/Capture6.PNG"},{"type":"paragraph","value":"Inputs and outputs for the <code>dayListBuild</code> component."},{"type":"image","value":"./Images/Capture7.PNG"},{"type":"paragraph","value":"The onClick event emitter."},{"type":"header","value":"Putting it all together"},{"type":"paragraph","value":"There is a lot more to Angular6. However, what I've shown are the most basic building blocks for any angular SPA. If I had more time I would have touched on the Angular6 bootstrap module that creates native Angular6 components to replace all bootstrap4 <code>jQuery</code>. Or how components can be created using *ngFor to create extremely powerful lists. Examples of those things can be found in my source code which is in the assignment code folder of homework 7."},{"type":"paragraph","value":"My recommendation for teaching a framework would be <a href=\"https://vuejs.org/\">Vue.Js</a>. It is a very simple framework and works great with <code>jQuery</code>. I would suggest using <code>jQuery</code> to handle all of the <code>AJAX</code> requests and pass the data on to <code>Vue.Js</code> and let it handle the presentation. <code>Angular6</code> is too heavy to teach in a single term. I am by no means an expert on the topic but I hope I was able to share some interesting information. Thank you for reading."}]